// Code generated by goctl. DO NOT EDIT.
// Source: display.proto

package meal

import (
	"context"

	"qywk-server/apps/display/rpc/display"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Meal             = display.Meal
	Plants           = display.Plants
	PlantsResp       = display.PlantsResp
	QueryMealReq     = display.QueryMealReq
	QueryMealResp    = display.QueryMealResp
	QueryPlantsReq   = display.QueryPlantsReq
	QuerySubareaResp = display.QuerySubareaResp
	Request          = display.Request
	Subarea          = display.Subarea

	MealZrpcClient interface {
		QuerySubarea(ctx context.Context, in *Request, opts ...grpc.CallOption) (*QuerySubareaResp, error)
		QueryMeal(ctx context.Context, in *QueryMealReq, opts ...grpc.CallOption) (*QueryMealResp, error)
	}

	defaultMealZrpcClient struct {
		cli zrpc.Client
	}
)

func NewMealZrpcClient(cli zrpc.Client) MealZrpcClient {
	return &defaultMealZrpcClient{
		cli: cli,
	}
}

func (m *defaultMealZrpcClient) QuerySubarea(ctx context.Context, in *Request, opts ...grpc.CallOption) (*QuerySubareaResp, error) {
	client := display.NewMealClient(m.cli.Conn())
	return client.QuerySubarea(ctx, in, opts...)
}

func (m *defaultMealZrpcClient) QueryMeal(ctx context.Context, in *QueryMealReq, opts ...grpc.CallOption) (*QueryMealResp, error) {
	client := display.NewMealClient(m.cli.Conn())
	return client.QueryMeal(ctx, in, opts...)
}
